name: CI/CD with Terraform and Ansible

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. AWS 인증
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 3. Terraform 실행
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform-basics

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ./terraform-basics

      # 4. Terraform Output 추출
      - name: Get Terraform Outputs
        id: tf-out
        run: |
          # Terraform output을 파일로 저장 후 읽기
          terraform output -raw ec2_public_ip > /tmp/ec2_ip.txt 2>/dev/null || echo "" > /tmp/ec2_ip.txt
          terraform output -raw rds_endpoint > /tmp/rds_endpoint.txt 2>/dev/null || echo "" > /tmp/rds_endpoint.txt
          terraform output -raw alb_dns_name > /tmp/alb_dns.txt 2>/dev/null || echo "" > /tmp/alb_dns.txt
          
          # 파일에서 첫 번째 줄만 읽기 (디버그 정보 제거)
          EC2_IP=$(head -n1 /tmp/ec2_ip.txt | tr -d '\n\r')
          RDS_ENDPOINT=$(head -n1 /tmp/rds_endpoint.txt | tr -d '\n\r' | cut -d: -f1)  # 포트 제거
          ALB_DNS=$(head -n1 /tmp/alb_dns.txt | tr -d '\n\r')
          
          # 환경변수 설정
          echo "ec2_public_ip=$EC2_IP" >> $GITHUB_ENV
          echo "rds_endpoint=$RDS_ENDPOINT" >> $GITHUB_ENV
          echo "alb_dns_name=$ALB_DNS" >> $GITHUB_ENV
          
          # 디버그용 출력
          echo "EC2 IP: $EC2_IP"
          echo "RDS Endpoint: $RDS_ENDPOINT"
          echo "ALB DNS: $ALB_DNS"
        working-directory: ./terraform-basics

      # 5. Ansible 실행
      - name: Install Ansible
        run: sudo apt-get update && sudo apt-get install -y ansible

      - name: Setup SSH Key
        run: |
          # SSH 디렉토리 생성
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          
          # Terraform에서 생성된 키 파일을 SSH 디렉토리로 복사
          cp terraform-basics/terraform-key.pem ~/.ssh/terraform-key.pem
          chmod 600 ~/.ssh/terraform-key.pem
          
          # 키 파일 확인
          ls -la ~/.ssh/terraform-key.pem

      - name: Generate Ansible Inventory
        run: |
          # Terraform output에서 EC2 IP를 받아서 inventory 파일 생성
          cat > ansible-basics/inventory.ini << EOF
          [webserver]
          ${{ env.ec2_public_ip }} ansible_user=ubuntu ansible_ssh_private_key_file=~/.ssh/terraform-key.pem
          EOF
          
          # 생성된 inventory 파일 확인
          echo "Generated inventory:"
          cat ansible-basics/inventory.ini

      - name: Run Ansible Playbook
        run: |
          ansible-playbook -i ansible-basics/inventory.ini ansible-basics/playbook.yml \
            --extra-vars "rds_endpoint=${{ env.rds_endpoint }} ec2_public_ip=${{ env.ec2_public_ip }}" \
            --ssh-extra-args="-o StrictHostKeyChecking=no"