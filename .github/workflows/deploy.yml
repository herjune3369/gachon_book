name: CI/CD with Terraform and Ansible

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. AWS 인증
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 3. Terraform 실행
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform-basics

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ./terraform-basics

      # 4. Terraform Output 추출
      - name: Get Terraform Outputs
        id: tf-out
        run: |
          EC2_IP=$(terraform output -raw ec2_public_ip 2>/dev/null || echo "")
          RDS_ENDPOINT=$(terraform output -raw rds_endpoint 2>/dev/null || echo "")
          ALB_DNS=$(terraform output -raw alb_dns_name 2>/dev/null || echo "")
          
          echo "ec2_public_ip=$EC2_IP" >> $GITHUB_ENV
          echo "rds_endpoint=$RDS_ENDPOINT" >> $GITHUB_ENV
          echo "alb_dns_name=$ALB_DNS" >> $GITHUB_ENV
        working-directory: ./terraform-basics

      # 5. Ansible 실행
      - name: Install Ansible
        run: sudo apt-get update && sudo apt-get install -y ansible

      - name: Run Ansible Playbook
        run: |
          ansible-playbook -i ansible-basics/inventory.ini ansible-basics/playbook.yml \
            --extra-vars "rds_endpoint=${{ env.rds_endpoint }} ec2_public_ip=${{ env.ec2_public_ip }}"