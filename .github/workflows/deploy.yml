name: CI/CD with Terraform and Ansible

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:  # 수동 실행 허용

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. AWS 인증
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 3. Terraform 실행
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform-basics

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ./terraform-basics

      # 4. Terraform Output 추출
      - name: Get Terraform Outputs
        id: tf-out
        run: |
          # Terraform 상태 확인
          echo "Checking terraform state..."
          terraform state list
          
          # Terraform output 직접 실행
          echo "Getting terraform outputs..."
          EC2_IP=$(terraform output -raw ec2_public_ip 2>/dev/null | grep -v "::debug::" | head -n1 || echo "")
          RDS_ENDPOINT=$(terraform output -raw rds_endpoint 2>/dev/null | grep -v "::debug::" | head -n1 || echo "")
          ALB_DNS=$(terraform output -raw alb_dns_name 2>/dev/null | grep -v "::debug::" | head -n1 || echo "")
          
          # 값이 비어있으면 오류
          if [ -z "$EC2_IP" ]; then
            echo "ERROR: EC2_IP is empty!"
            terraform output
            exit 1
          fi
          
          if [ -z "$RDS_ENDPOINT" ]; then
            echo "ERROR: RDS_ENDPOINT is empty!"
            terraform output
            exit 1
          fi
          
          if [ -z "$ALB_DNS" ]; then
            echo "ERROR: ALB_DNS is empty!"
            terraform output
            exit 1
          fi
          
          # 환경변수 설정
          echo "ec2_public_ip=$EC2_IP" >> $GITHUB_ENV
          echo "rds_endpoint=$RDS_ENDPOINT" >> $GITHUB_ENV
          echo "alb_dns_name=$ALB_DNS" >> $GITHUB_ENV
          
          # 디버그용 출력
          echo "EC2 IP: $EC2_IP"
          echo "RDS Endpoint: $RDS_ENDPOINT"
          echo "ALB DNS: $ALB_DNS"
        working-directory: ./terraform-basics

      # 5. Ansible 실행
      - name: Install Ansible
        run: sudo apt-get update && sudo apt-get install -y ansible

      - name: Setup SSH Key
        run: |
          # SSH 디렉토리 생성
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          
          # Terraform에서 생성된 키 파일 확인
          echo "Checking for SSH key file..."
          ls -la terraform-basics/terraform-key.pem || echo "SSH key file not found!"
          
          # Terraform에서 생성된 키 파일을 SSH 디렉토리로 복사
          if [ -f "terraform-basics/terraform-key.pem" ]; then
            cp terraform-basics/terraform-key.pem /home/runner/.ssh/terraform-key.pem
            chmod 600 /home/runner/.ssh/terraform-key.pem
            echo "SSH key copied successfully"
          else
            echo "ERROR: SSH key file not found!"
            exit 1
          fi
          
          # 키 파일 확인
          ls -la /home/runner/.ssh/terraform-key.pem

      - name: Generate Ansible Inventory
        run: |
          # Terraform output에서 직접 EC2 IP 가져오기
          cd terraform-basics
          EC2_IP=$(terraform output -raw ec2_public_ip 2>/dev/null | head -n1 | tr -d '\n\r' || echo "")
          cd ..
          echo "EC2_IP: $EC2_IP"
          
          if [ -z "$EC2_IP" ]; then
            echo "ERROR: EC2_IP is empty!"
            echo "Terraform outputs:"
            cd terraform-basics
            terraform output
            cd ..
            exit 1
          fi
          
          # 기존 inventory 파일 삭제
          rm -f ansible-basics/inventory.ini
          
          # 새로운 inventory 파일 생성
          cat > ansible-basics/inventory.ini << EOF
          [webserver]
          $EC2_IP ansible_user=ubuntu ansible_ssh_private_key_file=/home/runner/.ssh/terraform-key.pem
          EOF
          
          # 생성된 inventory 파일 확인
          echo "Generated inventory:"
          cat ansible-basics/inventory.ini
          
          # inventory 파일 유효성 검사
          ansible-inventory -i ansible-basics/inventory.ini --list

      - name: Run Ansible Playbook
        run: |
          # Terraform output에서 직접 RDS 엔드포인트 가져오기
          cd terraform-basics
          RDS_ENDPOINT=$(terraform output -raw rds_endpoint 2>/dev/null | head -n1 | tr -d '\n\r' || echo "")
          cd ..
          echo "RDS_ENDPOINT: $RDS_ENDPOINT"
          
          if [ -z "$RDS_ENDPOINT" ]; then
            echo "ERROR: RDS_ENDPOINT is empty!"
            echo "Terraform outputs:"
            cd terraform-basics
            terraform output
            cd ..
            exit 1
          fi
          
          # Ansible 실행
          ansible-playbook -i ansible-basics/inventory.ini ansible-basics/playbook.yml \
            --extra-vars "rds_endpoint=$RDS_ENDPOINT" \
            --ssh-extra-args="-o StrictHostKeyChecking=no"