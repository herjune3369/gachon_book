name: CI/CD with Terraform and Ansible

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. AWS 인증
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 3. Terraform 실행
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform-basics

      - name: Import existing AWS resources
        run: |
          # Import VPC and Key Pair
          terraform import aws_vpc.main vpc-09d14c7e05d32afa5 || true
          terraform import aws_key_pair.deployer terraform-key || true
          
          # Import Subnets
          terraform import aws_subnet.public_a subnet-04756b2926d79b540 || true
          terraform import aws_subnet.public_b subnet-0af934d41acac6b70 || true
          terraform import aws_subnet.private subnet-02137d48a73dfac05 || true
          
          # Import Internet Gateway
          terraform import aws_internet_gateway.gw igw-0404a125e97e9ef96 || true
          
          # Import Security Groups
          terraform import aws_security_group.web_sg sg-024b3247e4a6d41eb || true
          terraform import aws_security_group.alb_sg sg-0e3498c2761d4de1e || true
          terraform import aws_security_group.db_sg sg-0426952457905b1ed || true
          
          # Import Target Group
          terraform import aws_lb_target_group.app_tg arn:aws:elasticloadbalancing:ap-northeast-2:483260554116:targetgroup/terraform-tg/c9d323ce788c4267 || true
        working-directory: ./terraform-basics

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ./terraform-basics

      # 4. Terraform Output 추출
      - name: Get Terraform Outputs
        id: tf-out
        run: |
          echo "ec2_public_ip=$(terraform output -raw ec2_public_ip)" >> $GITHUB_ENV
          echo "rds_endpoint=$(terraform output -raw rds_endpoint)" >> $GITHUB_ENV
          echo "alb_dns_name=$(terraform output -raw alb_dns_name)" >> $GITHUB_ENV
        working-directory: ./terraform-basics

      # 5. Ansible 실행
      - name: Install Ansible
        run: sudo apt-get update && sudo apt-get install -y ansible

      - name: Run Ansible Playbook
        run: |
          ansible-playbook -i ansible-basics/inventory.ini ansible-basics/playbook.yml \
            --extra-vars "rds_endpoint=${{ env.rds_endpoint }} ec2_public_ip=${{ env.ec2_public_ip }}"